Como as strings em C++ têm tamanho variável, existem uma série de funções que podem ser utilizadas para controlar e manipular essa propriedade. Por tamanho variável, deve-se entender que uma string reserva uma certa quantidade de memória (sua capacidade), mas não necessariamente utiliza toda essa memória. Caso a string cresca mais do que a sua capacidade, então mais memória é reservada e assim por diante. A seguir apresenta-se as principais funções:

size(): retorna o tamanho corrente da string;
capacity(): retorna a capacidade corrente da string, ou seja, quantos elementos ela poderá conter antes de necessitar mais memória;
max_size(): retorna o tamanho máximo possível em uma string, geralmente dependente da máquina e do compilador.

#include <iostream>
#include <string>

using namespace std;

int main()
{
	string s1, s2("valor inicial"), s3[10];
	s1 = s2 + " copiado de s2";			// concatenacao e atribuicao
	cout << s1 << endl;
	for (int i=0; i<10; i++) cin >> s3[i];
	s1 += s3[0];
	cout << "tamanho de s2 é: " << s2.size();
	int sz= s2.size();
	for (int i=0; i<sz; i++) cout << s2[i] << " ";	// acesso a caracter
	cout << endl;
	
	return 0;
}
